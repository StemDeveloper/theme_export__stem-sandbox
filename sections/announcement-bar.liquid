{{ 'component-slideshow.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign social_icons = true
  if settings.social_facebook_link == blank and settings.social_instagram_link == blank and settings.social_youtube_link == blank and settings.social_tiktok_link == blank and settings.social_twitter_link == blank and settings.social_pinterest_link == blank and settings.social_snapchat_link == blank and settings.social_tumblr_link == blank and settings.social_vimeo_link == blank
    assign social_icons = false
  endif
  if section.settings.enable_country_selector or section.settings.enable_language_selector
    assign language_country_selector = true
  endif
  if section.blocks.size > 0
    assign announcement_bar = true
  endif
  assign scheme_hover_text = 'transparent'
  assign scheme_hover_background = 'transparent'
  assign scheme_hover_background_gradient = 'transparent'
  for scheme in settings.color_schemes
    if scheme.id contains section.settings.color_scheme_hover
      assign scheme_hover_text = scheme.settings.text
      assign scheme_hover_background = scheme.settings.background
      if scheme.settings.background_gradient != empty
        assign scheme_hover_background_gradient = scheme.settings.background_gradient
      else 
        assign scheme_hover_background_gradient = scheme.settings.background
      endif
    endif
  endfor
-%}

{% if social_icons %}
  {{ 'component-list-social.css' | asset_url | stylesheet_tag }}
{% endif %}
{% style %}
  .announcement-bar-section,
  .announcement-bar-section .utility-bar:not(.utility-bar--mask),
  .announcement-bar-section .utility-bar:not(.utility-bar--mask) * {
    transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
    -webkit-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
    -moz-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
    -ms-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
    -o-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
  }
  .announcement-bar-section {
    background-color: transparent;
  }
  .announcement-bar-section:hover {
    background-color: rgb({{ scheme_hover_background.red }}, {{ scheme_hover_background.green }}, {{ scheme_hover_background.blue }});
    background: {{ scheme_hover_background_gradient }};
  }
  .announcement-bar-section:hover .utility-bar:not(.utility-bar--mask) {
    --gradient-background: transparent;
  }
  .announcement-bar-section:hover .utility-bar:not(.utility-bar--mask),
  .announcement-bar-section:hover .utility-bar:not(.utility-bar--mask) * {
    --color-foreground: {{ scheme_hover_text.red }}, {{ scheme_hover_text.green }}, {{ scheme_hover_text.blue }};
  }
{% endstyle %}

<{% if section.settings.sticky_announcement_type != 'none' %}sticky-announcement data-sticky-type="{{ section.settings.sticky_announcement_type }}"{% else %}div{% endif %} class="announcement-wrap d-block">
{% if settings.enable_hero_transition and template.name == 'index' %}
  {% style %}
    .announcement-wrap {
      position: relative;
    }
    .utility-bar--mask {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      color: rgb(var(--color-background));
      background-color: rgb(var(--color-foreground));
      z-index: 0;
    }
    .utility-bar--mask,
    .utility-bar--mask * {
      color: rgb(var(--color-background));
      transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
      -webkit-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
      -moz-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
      -ms-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
      -o-transition: color var(--duration-short) ease, background-color var(--duration-long) ease;
    }
    .section-header,
    .utility-bar:not(.utility-bar--mask) {
      clip-path: circle(0 at 50% 100%);
    }
    .announcement-bar-section:hover .utility-bar--mask {
      background-color: transparent;
    }
    .announcement-bar-section:hover .utility-bar--mask,
    .announcement-bar-section:hover .utility-bar--mask * {
      --color-foreground: {{ scheme_hover_text.red }}, {{ scheme_hover_text.green }}, {{ scheme_hover_text.blue }};
      color: rgb(var(--color-foreground));
    }
  {% endstyle %}
  <div
    class="utility-bar utility-bar--mask color-{{ section.settings.color_scheme }}{% if section.settings.show_line_separator and section.blocks.size > 0 %} utility-bar--bottom-border{% elsif section.settings.show_line_separator and section.settings.show_social and social_icons%} utility-bar--bottom-border-social-only{% endif %}{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header-localization{% endif %}"
    {{ block.shopify_attributes }}
  >
    <div class="page-width utility-bar__grid{% if announcement_bar and language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--3-col{% elsif language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--2-col{% endif %}">
      {%- if section.settings.show_social and social_icons -%}
        {%- render 'social-icons' -%}
      {%- endif -%}
      {%- if section.blocks.size == 1 -%}
        <div
          class="announcement-bar{% if section.settings.show_social %} announcement-bar--one-announcement{% endif %}"
          role="region"
          aria-label="{{ 'sections.header.announcement' | t }}"
          {{ block.shopify_attributes }}
        >
          {%- if section.blocks.first.settings.text != blank -%}
            {%- if section.blocks.first.settings.link != blank -%}
              <a
                href="{{ section.blocks.first.settings.link }}"
                class="announcement-bar__link link focus-inset animate-arrow"
                {% if section.blocks.first.settings.open_new_window %}
                  target="_blank"
                {% endif %}
              >
            {%- endif -%}
            <p class="announcement-bar__message">
              <span>{{ section.blocks.first.settings.text | escape }}</span>
              {%- if section.blocks.first.settings.link != blank and section.blocks.first.settings.remove_icon == false -%}
                {{- 'icon-arrow.svg' | inline_asset_content -}}
              {%- endif -%}
            </p>
            {%- if section.blocks.first.settings.link != blank -%}
              </a>
            {%- endif -%}
          {%- endif -%}
        </div>
      {%- elsif section.blocks.size > 1 -%}
        <slideshow-component
          class="announcement-bar"
          role="region"
          aria-roledescription="{{ 'sections.announcements.carousel' | t }}"
          aria-label="{{ 'sections.announcements.announcement_bar' | t }}"
        >
          <div class="announcement-bar-slider slider-buttons">
            <button
              type="button"
              class="slider-button slider-button--prev"
              name="previous"
              aria-label="{{ 'sections.announcements.previous_announcement' | t }}"
              aria-controls="Slider-{{ section.id }}-mask"
            >
              <span class="svg-wrapper">
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </span>
            </button>
            <div
              class="grid grid--1-col slider slider--everywhere"
              id="Slider-{{ section.id }}-mask"
              aria-live="polite"
              aria-atomic="true"
              data-autoplay="{{ section.settings.auto_rotate }}"
              data-speed="{{ section.settings.change_slides_speed }}"
            >
              {%- for block in section.blocks -%}
                <div
                  class="slideshow__slide slider__slide grid__item grid--1-col"
                  id="Slider-{{ section.id }}-mask-{{ forloop.index }}"
                  {{ block.shopify_attributes }}
                  role="group"
                  aria-roledescription="{{ 'sections.announcements.announcement' | t }}"
                  aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                  tabindex="-1"
                >
                  <div
                    class="announcement-bar__announcement"
                    role="region"
                    aria-label="{{ 'sections.header.announcement' | t }}"
                    {{ block.shopify_attributes }}
                  >
                    {%- if block.settings.text != blank -%}
                      {%- if block.settings.link != blank -%}
                        <a
                          href="{{ block.settings.link }}"
                          class="announcement-bar__link link focus-inset animate-arrow"
                          {% if block.settings.open_new_window %}
                            target="_blank"
                          {% endif %}
                        >
                      {%- endif -%}
                      <p class="announcement-bar__message">
                        <span>{{ block.settings.text | escape }}</span>
                        {%- if block.settings.link != blank and block.settings.remove_icon == false -%}
                          {{- 'icon-arrow.svg' | inline_asset_content -}}
                        {%- endif -%}
                      </p>
                      {%- if block.settings.link != blank -%}
                        </a>
                      {%- endif -%}
                    {%- endif -%}
                  </div>
                </div>
              {%- endfor -%}
            </div>
            <button
              type="button"
              class="slider-button slider-button--next"
              name="next"
              aria-label="{{ 'sections.announcements.next_announcement' | t }}"
              aria-controls="Slider-{{ section.id }}-mask"
            >
              <span class="svg-wrapper">
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>
        </slideshow-component>
        {%- if request.design_mode -%}
          <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
          <style>
            /* theme editor power preview fix */
            .announcement-bar-slider .slider__slide[aria-hidden='true'] {
              visibility: hidden;
            }
          </style>
        {%- endif -%}
      {%- endif -%}
      {% if section.settings.enable_country_selector or section.settings.enable_language_selector %}
        <div class="localization-wrapper">
          {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
            <localization-form class="small-hide medium-hide">
              {%- form 'localization', id: 'AnnouncementCountryForm', class: 'localization-form' -%}
                <div>
                  <h2 class="visually-hidden" id="AnnouncementCountryLabel">{{ 'localization.country_label' | t }}</h2>
                  {%- render 'country-localization', localPosition: 'AnnouncementCountry' -%}
                </div>
              {%- endform -%}
            </localization-form>
          {% endif %}
  
          {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
            <localization-form class="small-hide medium-hide">
              {%- form 'localization', id: 'AnnouncementLanguageForm', class: 'localization-form' -%}
                <div>
                  <h2 class="visually-hidden" id="AnnouncementLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                  {%- render 'language-localization', localPosition: 'AnnouncementLanguage' -%}
                </div>
              {%- endform -%}
            </localization-form>
          {%- endif -%}
        </div>
      {% endif %}
    </div>
  </div>
{% endif %}
<div
  class="utility-bar color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator and section.blocks.size > 0 %} utility-bar--bottom-border{% elsif section.settings.show_line_separator and section.settings.show_social and social_icons%} utility-bar--bottom-border-social-only{% endif %}{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header-localization{% endif %}"
  {{ block.shopify_attributes }}
>
  <div class="page-width utility-bar__grid{% if announcement_bar and language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--3-col{% elsif language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--2-col{% endif %}">
    {%- if section.settings.show_social and social_icons -%}
      {%- render 'social-icons' -%}
    {%- endif -%}
    {%- if section.blocks.size == 1 -%}
      <div
        class="announcement-bar{% if section.settings.show_social %} announcement-bar--one-announcement{% endif %}"
        role="region"
        aria-label="{{ 'sections.header.announcement' | t }}"
        {{ block.shopify_attributes }}
      >
        {%- if section.blocks.first.settings.text != blank -%}
          {%- if section.blocks.first.settings.link != blank -%}
            <a
              href="{{ section.blocks.first.settings.link }}"
              class="announcement-bar__link link focus-inset animate-arrow"
              {% if section.blocks.first.settings.open_new_window %}
                target="_blank"
              {% endif %}
            >
          {%- endif -%}
          <p class="announcement-bar__message">
            <span>{{ section.blocks.first.settings.text | escape }}</span>
            {%- if section.blocks.first.settings.link != blank and section.blocks.first.settings.remove_icon == false -%}
              {{- 'icon-arrow.svg' | inline_asset_content -}}
            {%- endif -%}
          </p>
          {%- if section.blocks.first.settings.link != blank -%}
            </a>
          {%- endif -%}
        {%- endif -%}
      </div>
    {%- elsif section.blocks.size > 1 -%}
      <slideshow-component
        class="announcement-bar"
        role="region"
        aria-roledescription="{{ 'sections.announcements.carousel' | t }}"
        aria-label="{{ 'sections.announcements.announcement_bar' | t }}"
      >
        <div class="announcement-bar-slider slider-buttons">
          <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="{{ 'sections.announcements.previous_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
          <div
            class="grid grid--1-col slider slider--everywhere"
            id="Slider-{{ section.id }}"
            aria-live="polite"
            aria-atomic="true"
            data-autoplay="{{ section.settings.auto_rotate }}"
            data-speed="{{ section.settings.change_slides_speed }}"
          >
            {%- for block in section.blocks -%}
              <div
                class="slideshow__slide slider__slide grid__item grid--1-col"
                id="Slide-{{ section.id }}-{{ forloop.index }}"
                {{ block.shopify_attributes }}
                role="group"
                aria-roledescription="{{ 'sections.announcements.announcement' | t }}"
                aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                tabindex="-1"
              >
                <div
                  class="announcement-bar__announcement"
                  role="region"
                  aria-label="{{ 'sections.header.announcement' | t }}"
                  {{ block.shopify_attributes }}
                >
                  {%- if block.settings.text != blank -%}
                    {%- if block.settings.link != blank -%}
                      <a
                        href="{{ block.settings.link }}"
                        class="announcement-bar__link link focus-inset animate-arrow"
                        {% if block.settings.open_new_window %}
                          target="_blank"
                        {% endif %}
                      >
                    {%- endif -%}
                    <p class="announcement-bar__message">
                      <span>{{ block.settings.text | escape }}</span>
                      {%- if block.settings.link != blank and block.settings.remove_icon == false -%}
                        {{- 'icon-arrow.svg' | inline_asset_content -}}
                      {%- endif -%}
                    </p>
                    {%- if block.settings.link != blank -%}
                      </a>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            {%- endfor -%}
          </div>
          <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="{{ 'sections.announcements.next_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
        </div>
      </slideshow-component>
      {%- if request.design_mode -%}
        <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
        <style>
          /* theme editor power preview fix */
          .announcement-bar-slider .slider__slide[aria-hidden='true'] {
            visibility: hidden;
          }
        </style>
      {%- endif -%}
    {%- endif -%}
    {% if section.settings.enable_country_selector or section.settings.enable_language_selector %}
      <div class="localization-wrapper">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form class="small-hide medium-hide">
            {%- form 'localization', id: 'AnnouncementCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="AnnouncementCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'AnnouncementCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}
  
        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form class="small-hide medium-hide">
            {%- form 'localization', id: 'AnnouncementLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="AnnouncementLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'AnnouncementLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
    {% endif %}
  </div>
</div>
</{% if section.settings.sticky_announcement_type != 'none' %}sticky-announcement{% else %}div{% endif %}>

{% javascript %}
  class StickyAnnouncement extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-announcement');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-announcement-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--announcement-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-announcement');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-announcement');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-announcement');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-announcement-hidden', 'shopify-section-announcement-sticky');
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-announcement-sticky', 'animate');
      this.header.classList.remove('shopify-section-announcement-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-announcement-hidden', 'shopify-section-announcement-sticky', 'animate');
    }
  }

  customElements.define('sticky-announcement', StickyAnnouncement);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "class": "announcement-bar-section section-announcement",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-4"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme_hover",
      "label": "t:sections.all.colors_hover.label",
      "default": "scheme-5"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "select",
      "id": "sticky_announcement_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.announcement-bar.settings.sticky_announcement_type.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__1.content",
      "info": "t:sections.announcement-bar.settings.header__1.info"
    },
    {
      "type": "checkbox",
      "id": "show_social",
      "default": false,
      "label": "t:sections.announcement-bar.settings.show_social.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__2.content"
    },
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "label": "t:sections.announcement-bar.settings.auto_rotate.label",
      "default": false
    },
    {
      "type": "range",
      "id": "change_slides_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "t:sections.announcement-bar.settings.change_slides_speed.label",
      "default": 5
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__3.content",
      "info": "t:sections.announcement-bar.settings.header__3.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__4.content",
      "info": "t:sections.announcement-bar.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_language_selector.label"
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.announcement-bar.blocks.announcement.settings.text.default",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        },
        {
          "type": "checkbox",
          "id": "remove_icon",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.remove_icon.label",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "open_new_window",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.open_new_window.label",
          "default": true
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.announcement-bar.presets.name",
      "blocks": [
        {
          "type": "announcement"
        }
      ]
    }
  ]
}
{% endschema %}
