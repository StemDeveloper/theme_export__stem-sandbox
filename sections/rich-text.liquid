{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}
<script src="{{ 'richtext-animation.js' | asset_url }}" defer="defer"></script>

{% liquid
  assign animate_blocks = 0
  for block in section.blocks
    if block.type == 'text'
      assign animate_blocks = animate_blocks | plus: 1
    endif
  endfor
%}
{%- style -%}
  #shopify-section-{{ section.id }} {
    --richtext-animation-blocks: {{ animate_blocks }};
  }
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<richtext-animation 
  class="richtext--container"
  data-animate-start-px="0"
>
<div class="{% unless animate_blocks > 0 %} isolate{% endunless %}{% unless section.settings.full_width %} page-width{% endunless %}">
  <div class="rich-text content-container color-{{ section.settings.color_scheme }} gradient{% if section.settings.full_width %} rich-text--full-width content-container--full-width{% endif %} section-{{ section.id }}-padding">
    <div class="rich-text__wrapper rich-text__wrapper--{{ section.settings.desktop_content_position }}{% if section.settings.full_width %} page-width{% endif %}">
      <div class="rich-text__blocks {{ section.settings.content_alignment }}">
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'heading' -%}
              <h2
                class="rich-text__heading rte inline-richtext {{ block.settings.heading_size }}
                  {% if block.settings.color_animate %} rich-text__heading-animate{% endif %}
                  {% if block.settings.blur_heading %} rich-text__heading-animate-blur{% endif %}
                  {% if block.settings.shrink_animate %} rich-text__heading-animate-span{% endif %}
                  {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}
                "
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
                data-blur-strength="{{ block.settings.blur_strength }}"
                style="--color-foreground-secondary: {{ block.settings.secondary_color.red }}, {{ block.settings.secondary_color.green }}, {{ block.settings.secondary_color.blue }}; --heading-blur-strength: 0px;"
              >
                {{ block.settings.heading | newline_to_br }}
              </h2>
            {%- when 'caption' -%}
              <p
                class="rich-text__caption {{ block.settings.text_style }} {{ block.settings.text_style }}--{{ block.settings.text_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {{ block.settings.caption | escape }}
              </p>
            {%- when 'text' -%}
              {% liquid
                assign icon_description = false
                assign icon_description_bulletpoints = false
                for i in (1..5)
                  assign icon = 'icon_' | append: i
                  assign icon_description = 'icon_description_' | append: i
                  if block.settings[icon] != blank and block.settings[icon_description] != blank
                    assign icon_description = true
                  endif
                endfor
                if block.settings.text != blank and block.settings.text contains '<ul>' and icon_description
                  assign icon_description_bulletpoints = true
                endif
              %}
              <div
                class="rich-text__text color-{{ block.settings.color_scheme }} gradient rte
                  {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}
                  {% if icon_description_bulletpoints and block.settings.icon_text_below %} small-hide{% endif %}
                "
                {{ block.shopify_attributes }}
                data-animation="PopInCircle"
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {% unless icon_description_bulletpoints %}
                  <div class="rich-text__text-inner">
                    <div class="rich-text__text-box">
                      {{ block.settings.text }}
                    </div>
                    {% if block.settings.text_arrow %}
                      <div class="rich-text__arrow">
                        {{- 'icon-richtext-arrow.svg' | inline_asset_content -}}
                      </div>
                    {% endif %}
                  </div>
                {% endunless %}
                {% if icon_description_bulletpoints %}
                  {% assign bullet_list = block.settings.text | remove: '<ul>' | remove: '</ul>' | remove: '<li>' | split: '</li>' %}
                  <div class="rich-text__text-tab{% if block.settings.icon_text_below %} small-hide{% endif %}">
                    <richtext-tab 
                      data-event-type="hover"
                      data-section="section-{{ section.id }}-{{ block.id }}"
                      class="richtext-tab d-block small-hide medium-hide"
                    >
                      <div class="richtext-tab--container">
                        <div class="tab-button--list">
                          {% for bullet in bullet_list %}
                            {% liquid
                              assign icon = 'icon_' | append: forloop.index
                              assign icon_description = 'icon_description_' | append: forloop.index
                            %}
                            {% if block.settings[icon_description] != blank and block.settings[icon] != blank %}
                              <button 
                                class="tab-button js-tab-button{% if block.settings[icon] != blank %} tab-button--icon{% endif %}"
                                data-tab-target="richtext-tab-{{ section.id }}-{{ block.id }}-{{ forloop.index }}"
                                data-tab-active="{{ forloop.first }}"
                              >
                                {% if block.settings[icon] != blank %}
                                  <div class="icon-wrapper">
                                    <img src="{{ block.settings[icon] | image_url: width: block.settings[icon].width }}" alt="{{ block.settings[icon].alt }}">
                                  </div>
                                {% endif %}
                                {% if bullet != blank %}
                                  <span>{{ bullet }}</span>
                                {% endif %}
                              </button>
                            {% endif %}
                          {% endfor %}
                        </div>
                        <div class="tab-content--list">
                          {% for bullet in bullet_list %}
                            {% liquid
                              assign icon = 'icon_' | append: forloop.index
                              assign icon_description = 'icon_description_' | append: forloop.index
                            %}
                            {% if block.settings[icon_description] != blank and block.settings[icon] != blank %}
                              <div 
                                id="richtext-tab-{{ section.id }}-{{ block.id }}-{{ forloop.index }}" 
                                data-tab-active="{{ forloop.first }}"
                                class="tab-content js-tab-content"
                              >
                                <div class="tab-content--inner rte">
                                  {{ block.settings[icon_description] }}
                                </div>
                              </div>
                            {% endif %}
                          {% endfor %}
                        </div>
                      </div>
                    </richtext-tab>
                    <richtext-tab 
                      data-event-type="click"
                      data-section="section-{{ section.id }}-{{ block.id }}"
                      class="richtext-tab d-block large-up-hide"
                    >
                      <div class="tab-accordion--list">
                        {% for bullet in bullet_list %}
                          {% liquid
                            assign icon = 'icon_' | append: forloop.index
                            assign icon_description = 'icon_description_' | append: forloop.index
                          %}
                          {% if block.settings[icon_description] != blank and block.settings[icon] != blank %}
                            <div class="tab-accordion--item">
                              <button 
                                class="tab-button js-tab-button{% if block.settings[icon] != 'none' %} tab-button--icon{% endif %}"
                                data-tab-target="richtext-tab-{{ section.id }}-{{ block.id }}-{{ forloop.index }}"
                                data-tab-active="{{ forloop.first }}"
                              >
                                {% if block.settings[icon] != 'none' %}
                                  <div class="icon-wrapper">
                                    <img src="{{ block.settings[icon] | image_url: width: block.settings[icon].width }}" alt="{{ block.settings[icon].alt }}">
                                  </div>
                                {% endif %}
                                {% if bullet != blank %}
                                  <span>{{ bullet }}</span>
                                {% endif %}
                                <span class="tab-accordion--icon"></span>
                              </button>
                              <div 
                                id="richtext-tab-{{ section.id }}-{{ block.id }}-{{ forloop.index }}" 
                                data-tab-active="{{ forloop.first }}"
                                class="tab-content js-tab-content"
                              >
                                <div class="tab-content--inner rte">
                                  {{ block.settings[icon_description] }}
                                </div>
                              </div>
                            </div>
                          {% endif %}
                        {% endfor %}
                      </div>
                    </richtext-tab>
                  </div>
                {% endif %}
              </div>
            {%- when 'button' -%}
              <div
                class="rich-text__buttons{% if block.settings.button_label != blank and block.settings.button_label_2 != blank %} rich-text__buttons--multiple{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                {{ block.shopify_attributes }}
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
              >
                {%- if block.settings.button_label != blank -%}
                  <a
                    {% if block.settings.button_link == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.button_link }}"
                    {% endif %}
                    class="button{% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}"
                  >
                    {{- block.settings.button_label | escape -}}
                  </a>
                {%- endif -%}
                {%- if block.settings.button_label_2 != blank -%}
                  <a
                    {% if block.settings.button_link_2 == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.button_link_2 }}"
                    {% endif %}
                    class="button{% if block.settings.button_style_secondary_2 %} button--secondary{% else %} button--primary{% endif %}"
                  >
                    {{- block.settings.button_label_2 | escape -}}
                  </a>
                {%- endif -%}
              </div>
          {%- endcase -%}
        {%- endfor -%}
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'text' %}
              {% liquid
                assign icon_description = false
                assign icon_description_bulletpoints = false
                for i in (1..5)
                  assign icon = 'icon_' | append: i
                  assign icon_description = 'icon_description_' | append: i
                  if block.settings[icon] != blank and block.settings[icon_description] != blank
                    assign icon_description = true
                  endif
                endfor
                if block.settings.text != blank and block.settings.text contains '<ul>' and icon_description
                  assign icon_description_bulletpoints = true
                endif
              %}
              {% if icon_description_bulletpoints and block.settings.icon_text_below %}
                {% style %}
                  @media screen and (max-width: 749px) {
                    #shopify-section-{{ section.id }} {
                      --richtext-animation-blocks: {{ animate_blocks | minus: 1 }};
                    }
                  }
                {% endstyle %}
                {% assign bullet_list = block.settings.text | remove: '<ul>' | remove: '</ul>' | remove: '<li>' | split: '</li>' %}
                <div class="rich-text__icon-list-mobile color-{{ block.settings.color_scheme }} gradient medium-hide large-up-hide" style="margin-top: {{ section.settings.padding_bottom | times: 0.75 | round: 0 | times: 2 }}px;">
                  <richtext-tab 
                    data-event-type="click"
                    data-section="section-{{ section.id }}-{{ block.id }}"
                    class="richtext-tab d-block large-up-hide"
                  >
                    <div class="tab-accordion--list">
                      {% for bullet in bullet_list %}
                        {% liquid
                          assign icon = 'icon_' | append: forloop.index
                          assign icon_description = 'icon_description_' | append: forloop.index
                        %}
                        {% if block.settings[icon_description] != blank and block.settings[icon] != blank %}
                          <div class="tab-accordion--item">
                            <button 
                              class="tab-button js-tab-button{% if block.settings[icon] != 'none' %} tab-button--icon{% endif %}"
                              data-tab-target="richtext-tab-{{ section.id }}-{{ block.id }}-{{ forloop.index }}"
                              data-tab-active="false"
                            >
                              {% if block.settings[icon] != 'none' %}
                                <div class="icon-wrapper">
                                  <img src="{{ block.settings[icon] | image_url: width: block.settings[icon].width }}" alt="{{ block.settings[icon].alt }}">
                                </div>
                              {% endif %}
                              {% if bullet != blank %}
                                <span>{{ bullet }}</span>
                              {% endif %}
                              <span class="tab-accordion--icon"></span>
                            </button>
                            <div 
                              id="richtext-tab-{{ section.id }}-{{ block.id }}-{{ forloop.index }}" 
                              data-tab-active="false"
                              class="tab-content js-tab-content"
                            >
                              <div class="tab-content--inner rte">
                                {{ block.settings[icon_description] }}
                              </div>
                            </div>
                          </div>
                        {% endif %}
                      {% endfor %}
                    </div>
                  </richtext-tab>
                </div>
              {% endif %}
          {% endcase %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>
{% if section.settings.hero_arrow %}
  <hero-arrow 
    class="hero-arrow"
    data-animation-delay="0"
  >
    {{- 'icon-hero-arrow.svg' | inline_asset_content -}}
  </hero-arrow>
{% endif %}
</richtext-animation>

{% schema %}
{
  "name": "t:sections.rich-text.name",
  "tag": "section",
  "class": "section section--richtext",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.desktop_content_position.label",
      "info": "t:sections.rich-text.settings.desktop_content_position.info"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.content_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.content_alignment.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "hero_arrow",
      "label": "t:sections.image-banner.settings.hero_arrow.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.rich-text.settings.full_width.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.rich-text.blocks.heading.name",
      "limit": 3,
      "settings": [
        {
          "type": "textarea",
          "id": "heading",
          "default": "t:sections.rich-text.blocks.heading.settings.heading.default",
          "label": "t:sections.rich-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            },
            {
              "value": "hxl",
              "label": "t:sections.all.heading_size.options__4.label"
            },
            {
              "value": "hxxl",
              "label": "t:sections.all.heading_size.options__5.label"
            },
            {
              "value": "hxxxl",
              "label": "t:sections.all.heading_size.options__6.label"
            },
            {
              "value": "hxxxxl",
              "label": "t:sections.all.heading_size.options__7.label"
            },
            {
              "value": "h7xl",
              "label": "t:sections.all.heading_size.options__8.label"
            },
            {
              "value": "h10xl",
              "label": "t:sections.all.heading_size.options__9.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        },
        {
          "type": "color",
          "id": "secondary_color",
          "label": "t:sections.rich-text.blocks.heading.settings.secondary_color.label",
          "default": "#009B72"
        },
        {
          "type": "checkbox",
          "id": "shrink_animate",
          "label": "t:sections.rich-text.blocks.heading.settings.shrink_animate.label",
          "info": "t:sections.rich-text.blocks.heading.settings.shrink_animate.info",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "color_animate",
          "label": "t:sections.rich-text.blocks.heading.settings.color_animate.label",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "blur_heading",
          "label": "t:sections.rich-text.blocks.heading.settings.blur_heading.label",
          "default": false
        },
        {
          "type": "range",
          "id": "blur_strength",
          "label": "t:sections.rich-text.blocks.heading.settings.blur_strength.label",
          "default": 8,
          "unit": "px",
          "step": 1,
          "max": 10,
          "min": 1
        }
      ]
    },
    {
      "type": "caption",
      "name": "t:sections.rich-text.blocks.caption.name",
      "limit": 3,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "t:sections.rich-text.blocks.caption.settings.text.default",
          "label": "t:sections.rich-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.rich-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.rich-text.blocks.caption.settings.caption_size.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.rich-text.blocks.text.name",
      "limit": 3,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.rich-text.blocks.text.settings.text.default",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "t:sections.all.colors.label",
          "default": "scheme-1"
        },
        {
          "type": "checkbox",
          "id": "text_arrow",
          "label": "t:sections.rich-text.blocks.text.settings.text_arrow.label",
          "default": false
        },
        {
          "type": "header",
          "content": "t:sections.rich-text.blocks.text.settings.icon_description_header.content"
        },
        {
          "type": "checkbox",
          "id": "icon_text_below",
          "label": "t:sections.rich-text.blocks.text.settings.icon_text_below.label",
          "default": true
        },
        {
          "type": "image_picker",
          "id": "icon_1",
          "label": "t:sections.rich-text.blocks.text.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "icon_description_1",
          "label": "t:sections.rich-text.blocks.text.settings.icon_description.label"
        },
        {
          "type": "image_picker",
          "id": "icon_2",
          "label": "t:sections.rich-text.blocks.text.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "icon_description_2",
          "label": "t:sections.rich-text.blocks.text.settings.icon_description.label"
        },
        {
          "type": "image_picker",
          "id": "icon_3",
          "label": "t:sections.rich-text.blocks.text.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "icon_description_3",
          "label": "t:sections.rich-text.blocks.text.settings.icon_description.label"
        },
        {
          "type": "image_picker",
          "id": "icon_4",
          "label": "t:sections.rich-text.blocks.text.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "icon_description_4",
          "label": "t:sections.rich-text.blocks.text.settings.icon_description.label"
        },
        {
          "type": "image_picker",
          "id": "icon_5",
          "label": "t:sections.rich-text.blocks.text.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "icon_description_5",
          "label": "t:sections.rich-text.blocks.text.settings.icon_description.label"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.rich-text.blocks.buttons.name",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "t:sections.rich-text.blocks.buttons.settings.button_label_1.default",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_1.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_1.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_1.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_1.label"
        },
        {
          "type": "text",
          "id": "button_label_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_2.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_2.info"
        },
        {
          "type": "url",
          "id": "button_link_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_2.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_2",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_2.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.rich-text.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
